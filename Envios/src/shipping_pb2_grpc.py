# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import shipping_pb2 as shipping__pb2


class OrderServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.createOrder = channel.unary_unary(
                '/shipping.interfaces.OrderService/createOrder',
                request_serializer=shipping__pb2.CreateOrderRequest.SerializeToString,
                response_deserializer=shipping__pb2.CreateOrderResponse.FromString,
                )
        self.getOrder = channel.unary_unary(
                '/shipping.interfaces.OrderService/getOrder',
                request_serializer=shipping__pb2.GetOrderRequest.SerializeToString,
                response_deserializer=shipping__pb2.GetOrderResponse.FromString,
                )
        self.updateOrder = channel.unary_unary(
                '/shipping.interfaces.OrderService/updateOrder',
                request_serializer=shipping__pb2.UpdateOrderRequest.SerializeToString,
                response_deserializer=shipping__pb2.UpdateOrderResponse.FromString,
                )


class OrderServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def createOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OrderServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'createOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.createOrder,
                    request_deserializer=shipping__pb2.CreateOrderRequest.FromString,
                    response_serializer=shipping__pb2.CreateOrderResponse.SerializeToString,
            ),
            'getOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.getOrder,
                    request_deserializer=shipping__pb2.GetOrderRequest.FromString,
                    response_serializer=shipping__pb2.GetOrderResponse.SerializeToString,
            ),
            'updateOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.updateOrder,
                    request_deserializer=shipping__pb2.UpdateOrderRequest.FromString,
                    response_serializer=shipping__pb2.UpdateOrderResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'shipping.interfaces.OrderService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class OrderService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def createOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shipping.interfaces.OrderService/createOrder',
            shipping__pb2.CreateOrderRequest.SerializeToString,
            shipping__pb2.CreateOrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shipping.interfaces.OrderService/getOrder',
            shipping__pb2.GetOrderRequest.SerializeToString,
            shipping__pb2.GetOrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shipping.interfaces.OrderService/updateOrder',
            shipping__pb2.UpdateOrderRequest.SerializeToString,
            shipping__pb2.UpdateOrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
